---
import Loader from "../components/Loader.astro";
import Navbar from "../components/Navbar.astro";

export interface Props {
  title?: string;
}

const { title } = Astro.props as Props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/@tabler/icons@latest/iconfont/tabler-icons.min.css"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title || "Thang Pham's Portfolio"}</title>
  </head>
  <body>
    <div
      id="preloader"
      class="fixed z-50 bg-primary w-screen h-screen flex justify-center items-center duration-200"
    >
      <Loader />
    </div>
    <Navbar />
    <slot />
  </body>
</html>
<style is:global>
  @import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
  @import url("https://fonts.googleapis.com/css2?family=Fira+Code&display=swap");

  html {
    scroll-padding-top: 60px;
    scroll-behavior: smooth;
    font-family: Poppins, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,
      Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,
      sans-serif;
  }

  code {
    font-family: "Fira Code", monospace;
  }

  .mockup-window::before,
  .mockup-code::before {
    transition: all 0.1s ease-in-out;
  }

  .mockup-window:hover.mockup-window::before,
  .mockup-code:hover.mockup-code::before {
    box-shadow: 1.4em 0 0 0 #ff605c, 2.8em 0 0 0 #ffbd44, 4.2em 0 0 0 #00ca4e;
  }

  h1 {
    transition: all 0.2s ease-in-out;
  }
  h1:hover {
    letter-spacing: 4px;
  }
</style>

<script>
  window.addEventListener("load", () => {
    const loader = document.querySelector("#preloader");
    const timeout1 = setTimeout(() => {
      loader.classList.add("opacity-0");
    }, 400);
    const timeout2 = setTimeout(() => {
      loader.classList.add("hidden");
    }, 600);

    return () => {
      clearTimeout(timeout1);
      clearTimeout(timeout2);
    };
  });
</script>
